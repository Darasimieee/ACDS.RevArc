using System;
using System.Runtime.CompilerServices;
using ACDS.RevBill.Contracts;
using ACDS.RevBill.Entities.Models;
using ACDS.RevBill.Service.Contracts;

namespace ACDS.RevBill.Repository
{
    public sealed class RepositoryManager : IRepositoryManager
    {
        private readonly RepositoryContext _repositoryContext;
        private readonly Lazy<IRoleRepository> _roleRepository;
        private readonly Lazy<IUsersRepository> _userRepository;
        private readonly Lazy<IUserRoleRepository> _userRoleRepository;
        private readonly Lazy<IOrganisationRepository> _organisationRepository;
        private readonly Lazy<IUserProfileRepository> _userProfileRepository;
        private readonly Lazy<IUserPasswordRepository> _userPasswordRepository;
        private readonly Lazy<ICustomerRepository> _customerRepository;
        private readonly Lazy<ILgasRepository> _lgaRepository;
        private readonly Lazy<IMenusRepository> _menusRepository;
        private readonly Lazy<IModulesRepository> _modulesRepository;
        private readonly Lazy<IOrganisationModulesRepository> _orgmodulesRepository;
        private readonly Lazy<IRoleModulesRepository> _orgRoleModulesRepository;
        private readonly Lazy<IRoleModuleMenuRepository> _orgRoleModuleMenusRepository;
        private readonly Lazy<IEmailTemplateRepository> _emailTemplateRepository;
        private readonly Lazy<IEmailAccountRepository> _emailAccountRepository;
        private readonly Lazy<ISmsTemplateRepository> _smsTemplateRepository;
        private readonly Lazy<ISmsAccountRepository> _smsAccountRepository;
        private readonly Lazy<IPasswordHistoryRepository> _passwordHistoryRepository;
        private readonly Lazy<IGenderRepository> _genderRepository;
        private readonly Lazy<IPayerTypeRepository> _payerTypeRepository;
        private readonly Lazy<IMaritalStatusRepository> _maritalStatusRepository;
        private readonly Lazy<ITitleRepository> _titleRepository;
        private readonly Lazy<IStatesRepository> _stateRepository;
        private readonly Lazy<ICountriesRepository> _countriesRepository;
        private readonly Lazy<ILcdaRepository> _lcdaRepository;
        private readonly Lazy<IBillingRepository> _billingRepository;
        private readonly Lazy<IAgencyRepository> _agencyRepository;
        private readonly Lazy<IStreetRepository> _streetRepository;
        private readonly Lazy<IRevenueRepository> _revenueRepository;
        private readonly Lazy<IHeadRevenueRepository> _headRevenueRepository;
        private readonly Lazy<IRevenueCategoryRepository> _revenueCategoryRepository;
        private readonly Lazy<ICategoryRepository> _categoryRepository;
        private readonly Lazy<IRevenuePriceRepository> _revenuePriceRepository;
        private readonly Lazy<IPropertyRepository> _propertyRepository;
        private readonly Lazy<ISpaceIdentifierRepository> _spaceIdentifierRepository;
        private readonly Lazy<IWardRepository> _wardRepository;
        private readonly Lazy<IBusinessTypeRepository> _businessTypeRepository;
        private readonly Lazy<IBusinessSizeRepository> _businessSizeRepository;
        private readonly Lazy<IBusinessProfileRepository> _businessProfileRepository;
        private readonly Lazy<IFrequencyRepository> _frequencyRepository;
        private readonly Lazy<ICustomerPropertyRepository> _customerPropertyRepository;
        private readonly Lazy<ITenancyRepository> _tenancyRepository;
        private readonly Lazy<IPaymentRepository> _paymentRepository;
        private readonly Lazy<IBankRepository> _bankRepository;
        private readonly Lazy<IOrganisationBankRepository> _organisationBankRepository;
        private readonly Lazy<IBillFormatRepository> _billFormatRepository;
        private readonly Lazy<IDebtRepository> _debtRepository;
        public RepositoryManager(RepositoryContext repositoryContext)
        {
            _repositoryContext = repositoryContext;
            _roleRepository = new Lazy<IRoleRepository>(() => new RoleRepository(repositoryContext));
            _userRepository = new Lazy<IUsersRepository>(() => new UserRepository(repositoryContext));
            _userRoleRepository = new Lazy<IUserRoleRepository>(() => new UserRoleRepository(repositoryContext));
            _organisationRepository= new Lazy<IOrganisationRepository>(() => new OrganisationRepository(repositoryContext));
            _userProfileRepository = new Lazy<IUserProfileRepository>(() => new UserProfileRepository(repositoryContext));
            _userPasswordRepository = new Lazy<IUserPasswordRepository>(() => new UserPasswordRepository(repositoryContext));
            _customerRepository = new Lazy<ICustomerRepository>(() => new CustomerRepository(repositoryContext));
            _lgaRepository = new Lazy<ILgasRepository>(() => new LgasRepository(repositoryContext));
            _menusRepository=new Lazy<IMenusRepository>(() => new MenusRepository(repositoryContext));
            _modulesRepository = new Lazy<IModulesRepository>(() => new ModulesRepository(repositoryContext));
            _orgmodulesRepository = new Lazy<IOrganisationModulesRepository>(() => new OrganisationModulesRepository(repositoryContext));
            _orgRoleModulesRepository = new Lazy<IRoleModulesRepository>(() => new RoleModulesRepository(repositoryContext));
            _orgRoleModuleMenusRepository = new Lazy<IRoleModuleMenuRepository>(() => new RoleModuleMenuRepository(repositoryContext));
            _emailTemplateRepository = new Lazy<IEmailTemplateRepository>(() => new EmailTemplateRepository(repositoryContext));
            _emailAccountRepository = new Lazy<IEmailAccountRepository>(() => new EmailAccountRepository(repositoryContext));
            _passwordHistoryRepository = new Lazy<IPasswordHistoryRepository>(() => new PasswordHistoryRepository(repositoryContext));
            _genderRepository = new Lazy<IGenderRepository>(() => new GenderRepository(repositoryContext));
            _payerTypeRepository = new Lazy<IPayerTypeRepository>(() => new PayerTypeRepository(repositoryContext));
            _maritalStatusRepository = new Lazy<IMaritalStatusRepository>(() => new MaritalStatusRepository(repositoryContext));
            _titleRepository = new Lazy<ITitleRepository>(() => new TitleRepository(repositoryContext));
            _stateRepository = new Lazy<IStatesRepository>(() => new StatesRepository(repositoryContext));
            _countriesRepository = new Lazy<ICountriesRepository>(() => new CountriesRepository(repositoryContext));
            _lcdaRepository = new Lazy<ILcdaRepository>(() => new LcdaRepository(repositoryContext));
            _billingRepository = new Lazy<IBillingRepository>(() => new BillingRepository(repositoryContext));
            _smsTemplateRepository = new Lazy<ISmsTemplateRepository>(() => new SmsTemplateRepository(repositoryContext));
            _smsAccountRepository = new Lazy<ISmsAccountRepository>(() => new SmsAccountRepository(repositoryContext));
            _passwordHistoryRepository =new Lazy<IPasswordHistoryRepository>(() => new PasswordHistoryRepository(repositoryContext));
            _agencyRepository = new Lazy<IAgencyRepository>(() => new AgencyRepository(repositoryContext));
            _streetRepository = new Lazy<IStreetRepository>(() => new StreetRepository(repositoryContext));
            _revenueRepository = new Lazy<IRevenueRepository>(() => new RevenueRepository(repositoryContext));
            _revenueCategoryRepository = new Lazy<IRevenueCategoryRepository>(() => new RevenueCategoryRepository(repositoryContext));
            _categoryRepository = new Lazy<ICategoryRepository>(() => new CategoryRepository(repositoryContext));
            _revenuePriceRepository = new Lazy<IRevenuePriceRepository>(() => new RevenuePriceRepository(repositoryContext));
            _headRevenueRepository = new Lazy<IHeadRevenueRepository>(() => new HeadRevenueRepository(repositoryContext));
            _propertyRepository = new Lazy<IPropertyRepository>(() => new PropertyRepository(repositoryContext));
            _spaceIdentifierRepository = new Lazy<ISpaceIdentifierRepository>(() => new SpaceIdentifierRepository(repositoryContext));
            _businessTypeRepository = new Lazy<IBusinessTypeRepository>(() => new BusinessTypeRepository(repositoryContext));
            _businessSizeRepository = new Lazy<IBusinessSizeRepository>(() => new BusinessSizeRepository(repositoryContext));
            _businessProfileRepository = new Lazy<IBusinessProfileRepository>(() => new BusinessProfileRepository(repositoryContext));
            _frequencyRepository = new Lazy<IFrequencyRepository>(() => new FrequencyRepository(repositoryContext));
            _customerPropertyRepository = new Lazy<ICustomerPropertyRepository>(() => new CustomerPropertyRepository(repositoryContext));
            _tenancyRepository = new Lazy<ITenancyRepository>(() => new TenancyRepository(repositoryContext));
            _paymentRepository = new Lazy<IPaymentRepository>(() => new PaymentRepository(repositoryContext));
            _bankRepository = new Lazy<IBankRepository>(() => new BankRepository(repositoryContext));
            _organisationBankRepository = new Lazy<IOrganisationBankRepository>(() => new OrganisationBankRepository(repositoryContext));
            _billFormatRepository = new Lazy<IBillFormatRepository>(() => new BillFormatRepository(repositoryContext));
            _debtRepository = new Lazy<IDebtRepository>(() => new DebtRepository(repositoryContext));
        }

        public IRoleRepository Roles => _roleRepository.Value;
        public IUsersRepository Users => _userRepository.Value;
        public IUserRoleRepository UserRole => _userRoleRepository.Value;
        public IOrganisationRepository Organisation => _organisationRepository.Value;
        public IUserProfileRepository UserProfile => _userProfileRepository.Value;
        public IUserPasswordRepository UserPassword => _userPasswordRepository.Value;
        public ICustomerRepository Customer => _customerRepository.Value;
        public ILgasRepository Lgas => _lgaRepository.Value;
        public IMenusRepository Menus=> _menusRepository.Value;
        public IModulesRepository Modules => _modulesRepository.Value;
        public IOrganisationModulesRepository OrganisationModules => _orgmodulesRepository.Value;
        public IRoleModulesRepository RoleModules => _orgRoleModulesRepository.Value;
        public IRoleModuleMenuRepository RoleModuleMenus => _orgRoleModuleMenusRepository.Value;
        public IEmailTemplateRepository EmailTemplates => _emailTemplateRepository.Value;
        public IEmailAccountRepository EmailAccounts => _emailAccountRepository.Value;
        public ISmsTemplateRepository SmsTemplates => _smsTemplateRepository.Value;
        public ISmsAccountRepository SmsAccounts => _smsAccountRepository.Value;
        public IPasswordHistoryRepository PasswordHistory => _passwordHistoryRepository.Value;
        public IGenderRepository Gender => _genderRepository.Value;
        public IPayerTypeRepository PayerType => _payerTypeRepository.Value;
        public IMaritalStatusRepository MaritalStatus => _maritalStatusRepository.Value;
        public ITitleRepository Title => _titleRepository.Value;
        public ILcdaRepository Lcdas => _lcdaRepository.Value;
        public ICountriesRepository Countries => _countriesRepository.Value;
        public IStatesRepository States => _stateRepository.Value;
        public IBillingRepository Billing => _billingRepository.Value;
        public IAgencyRepository Agencies => _agencyRepository.Value;
        public IStreetRepository Streets => _streetRepository.Value;
        public IRevenueRepository Revenues => _revenueRepository.Value;
        public IHeadRevenueRepository HeadRevenues => _headRevenueRepository.Value;
        public IRevenueCategoryRepository RevenueCategories => _revenueCategoryRepository.Value;
        public ICategoryRepository Category => _categoryRepository.Value;
        public IRevenuePriceRepository RevenuePrices => _revenuePriceRepository.Value;
        public IPropertyRepository Property => _propertyRepository.Value;
        public ISpaceIdentifierRepository SpaceIdentifier => _spaceIdentifierRepository.Value;
        public IWardRepository Wards => _wardRepository.Value;
        public IBusinessSizeRepository BusinessSize => _businessSizeRepository.Value;
        public IBusinessTypeRepository BusinessType => _businessTypeRepository.Value;
        public IBusinessProfileRepository BusinessProfile => _businessProfileRepository.Value;
        public IFrequencyRepository Frequencies => _frequencyRepository.Value;
        public ICustomerPropertyRepository CustomerProperty => _customerPropertyRepository.Value;
        public ITenancyRepository Tenancy => _tenancyRepository.Value;
        public IPaymentRepository Payment => _paymentRepository.Value;
        public IBankRepository Bank => _bankRepository.Value;
        public IOrganisationBankRepository OrganisationBank => _organisationBankRepository.Value;
        public IBillFormatRepository BillFormat => _billFormatRepository.Value;
        public IDebtRepository debtRepository => _debtRepository.Value;
        public async Task SaveAsync() => await _repositoryContext.SaveChangesAsync();
    }
}